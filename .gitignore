import matplotlib.pyplot as plt
from scipy.optimize import fsolve
import numpy as np
import math   
import matplotlib.ticker 

f1=[]
f2=[]
Re1=[]
Rug1=[]
RE1=[]

RUG= [0.00001,0.00005,0.0001,0.0002,0.0004,0.0006,0.0008,0.001,0.002,0.004,\
      0.006,0.008,0.01,0.015,0.02,0.03,0.04,0.05]
for Rug in RUG:  
    for Re in range(2300,10**8,10**7):
        Range=range(2300,10**8,10**7)
        def y(f):
            return -2.0*math.log10(Rug/3.7+2.51/(Re*math.sqrt(f)))-1/math.sqrt(f)
        f0= 0.0003
        f=fsolve(y,f0)
        f=np.around(f,decimals=3)  
        f1.extend(f)  
        Re1.append(Re) 
        
tamanho=len(f1) 
TAMANHO=len(Range) 
Div=tamanho/TAMANHO
Div=round(Div) 

for i in range(0,Div,1): 
    Re1lista=[Re1[i:i+TAMANHO] for i in range(0, len(Re1), TAMANHO)]
    f1lista=[f1[i:i+TAMANHO] for i in range(0, len(f1), TAMANHO)] 
    f1listaseparada=f1lista[i]
    p=f1listaseparada[TAMANHO-1] 
    plt.plot(Re1lista[i],f1lista[i],'-',markersize=2, linewidth=2)
    plt.title('Moody Diagram',size='xx-large')
    plt.annotate(RUG[i], (1.2*10**8,p),size=10)   
    plt.xlabel('Reynolds Number,Re',{'fontsize': 16})
    plt.xscale('log')
    plt.yscale('log')
    plt.ylabel('Friction Factor,f',{'fontsize': 16})
    plt.text(1.1, 0.5, 'Relative Roughness,\u03B5/D', {'color': 'k', 'fontsize': 15},    
         horizontalalignment='left',verticalalignment='center', rotation=270, clip_on=False,
         transform=plt.gca().transAxes) 
    plt.axvspan(2300, 4000, facecolor='gainsboro', alpha=0.5) 
    plt.grid(which='major', linestyle='--', linewidth='1.0', color='k') 
    plt.grid(which='minor', linestyle=':', linewidth='0.5', color='k') 
    ax = plt.gca()
    ax.yaxis.set_major_formatter(matplotlib.ticker.ScalarFormatter())
    ax.yaxis.set_minor_formatter(matplotlib.ticker.ScalarFormatter())  
    plt.autoscale(enable=True, axis='y')
    plt.minorticks_on
    
flam=[]
RElam=[]
for RElaminar in range(700,2300,50):
    flaminar=64/RElaminar 
    flaminar=np.around(flaminar,decimals=3)  
    RElam.append(RElaminar)
    flam.append(flaminar)  
plt.plot(RElam,flam,'r-',markersize=2, linewidth=2)
plt.annotate('Transition Zone\n 2,300 < Re < 4,000', (3000,0.015),fontsize=12)
plt.annotate('Laminar Flow\nf=64/Re', (450,0.04),fontsize=12) 
